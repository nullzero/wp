#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys, os, re, datetime, difflib
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))

try: from lib import preload
except:
    print "เรียกใช้ไลบรารีไม่ได้ จบการทำงาน!"
    sys.exit()

import pwikipedia as pywikibot
pywikibot.handleArgs(u"-user:Nullzerotest")

DEBUG = False

startChecking = 1
site = preload.site
insertDisamT = None
container = {}

def notify(user, scontent):
    if user == u"JBot": return
    usertalk = pywikibot.Page(site, u"User talk:" + user)
    
    if not usertalk.exists():
        pywikibot.output(u">>> ไม่มีหน้านี้มาก่อน - ไอพี ไม่เตือน")
        return
    
    message = insertDisamT
    message = message.replace(u"<!-- ลิงก์ -->", scontent)
    message = message.replace(u"<!-- ชื่อผู้ใช้ -->", user)
    message = message.replace(u"<!-- วันที่ -->", "%d/%d" % (datetime.datetime.today().day,
        datetime.datetime.today().month))
    
    try:
        usertalk.put(usertalk.get() + u"\n\n" + message + u" --~~~~", u"แจ้งใส่ลิงก์โยงไปยังหน้าแก้กำกวม")
    except: preload.error()
    
    pywikibot.output(u">>> เรียบร้อย!")

def save(user, title, links):
    pywikibot.output(u">>> save %s %s" % (user, title))
    global container
    if user in container:
        if title in container[user]:
            container[user][title] = container[user][title] | links
        else:
            container[user][title] = links
    else:
        container[user] = {}
        container[user][title] = links

def dict2str(d):
    s = u""
    for title in d:
        s += u"; [[" + title + u"]]\n"
        s += "".join(map(lambda x: u"* [[" + x + u"]]\n", list(d[title])))
    return s
    
def flush():
    global insertDisamT
    insertDisamT = pywikibot.Page(site, u"User:Nullzerobot/ข้อความ/insert-disam").get()
    for user in container:
        notify(user, dict2str(container[user]))

def check(revision):
    page = revision[0]
    pywikibot.output(u"check %s @ %s" % (page.title(), preload.getTime()))
    revid = revision[1]['revid']
    oldrevid = revision[1]['old_revid']
    if oldrevid == 0: contentold = u""
    else: contentold = page.getOldVersion(oldrevid)
    contentnew = page.get()
    addedlinks = set(pywikibot.extractLinkedPages(contentnew, page)) - \
        set(pywikibot.extractLinkedPages(contentold, page))
    
    disamlinks = []
    
    for link in addedlinks:
        if u":" in link.title(): continue
        if link.title().startswith(u"#"): continue
        try:
            if link.isRedirectPage(): link = link.getRedirectTarget()
            if link.isDisambig(): disamlinks.append(link.title())
        except: preload.error()
    
    if len(disamlinks) != 0:
        save(revision[1]['user'], revision[1]['title'], set(disamlinks))
    
if __name__ == "__main__":
    pywikibot.handleArgs("-log")
    pywikibot.output(u"สคริปต์แจ้งโยงไปยังหน้าแก้กำกวมเริ่มทำงาน ณ เวลา %s" % preload.getTime())
    
    if len(sys.argv) > 1:
        if sys.argv[1] == "-d": DEBUG = True
        
    gen = site.recentchanges(number = startChecking,
            rcshow = ['!redirect', '!bot'],
            namespace = "|".join([str(x) for x in xrange(0, 16, 2) if x != 2]), 
            repeat = True,
            returndict = True)
            
    todaynum = datetime.datetime.today().day
    for revision in gen:
        try:
            check(revision)
            if todaynum != datetime.datetime.today().day:
                flush()
                container = {}
                todaynum = datetime.datetime.today().day
        except:
            preload.error()
    
    pywikibot.output(u"สคริปต์แจ้งโยงไปยังหน้าแก้กำกวมหยุดทำงาน ณ เวลา %s" % preload.getTime())
    pywikibot.stopme()
