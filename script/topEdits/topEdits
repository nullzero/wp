#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys, datetime, re, os
sys.path.append(os.path.abspath("../.."))
from lib import preload
import pwikipedia as pywikibot, query
from lib import libdata, re2

def _debug():
    NotImplemented

if __name__ == "__main__":
    pbot = re2.re2(u"(?i)^(.*(บอต|bot)|(บอต|bot).*)$")

def isbot(data):
    if "bot" in data["groups"]: return True
    if data["name"] == u"New user message": return True
    return pbot.match(data["name"]) is not None

def trimbot(data):
    appendlist = []
    
    for i in data:
        if not isbot(i):
            appendlist.append(i)
    
    return appendlist

def dowrite(path, data):
    puttext = u"ปรับปรุงล่าสุด %s\n\n{{/begin|500}}\n" % preload.getTime()
    
    for i in data:
        ptext += (u"|-\n| %d || [[User:%s|%s]]" % (cnt, i["name"], i["name"])
            u" %s %s || " % ("(Admin)" if ("sysop" in i["groups"]) else "",
                            "(Bot)" if ("bot" in i["groups"]) else "") + 
            u"[[Special:Contributions/%s|%s]]\n" % (i["name"], i["editcount"])
    
    page = pywikibot.Page(site, path)
    gettext = page.get()
    
    pre, post = gettext.split(u"{{/end}}")
    
    page.put(ptext + u"{{/end}}" + post, u"ปรับปรุงรายการ")
    pywikibot.output(u"done!")
    
def main():
    funcSortedList = lambda a, b: b["editcount"] - a["editcount"]
    includelist = libdata.LimitedSortedList(funcSortedList)
    excludelist = libdata.LimitedSortedList(funcSortedList)

    params = {
        "action"  : "query",
        "list"    : "allusers",
        "aulimit" : conf.numquery,
        "auprop"  : "editcount|groups",
    }
    
    while True:
        try:
            getdata = query.GetData(params, site)
        except:
            break
            
        pywikibot.output(getdata["query"]["allusers"][0]["name"])
        
        includelist.concat(getdata["query"]["allusers"])
        excludelist.concat(trimbot(getdata["query"]["allusers"]))
        
        try:
            params["aufrom"] = getdata["query-continue"]["allusers"]["aufrom"]
        except:
            break
    
    dowrite(conf.path + conf.botsuffix, includelist.get()[:allentries])
    dowrite(conf.path, excludelist.get()[:conf.allentries])

if __name__ == "__main__":
    args, site, conf = preload.pre(u"update top user edits", lock=True)
    try:
        #_debug()
        main()
    except:
        preload.posterror()
    else:
        preload.post()
