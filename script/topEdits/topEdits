#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys, datetime, re, os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))

try: from lib import preload
except:
    print "E: Can't connect to library!"
    sys.exit()

import pwikipedia as pywikibot, query
from lib import libdata

# constant
NUMQUERY = '5000'
PATH = u"วิกิพีเดีย:รายชื่อชาววิกิพีเดียที่แก้ไขมากที่สุด_500_อันดับ"
BOTSUFFIX = u"_(รวมบอต)"
# end constant

pbot = re.compile(u"^(.*(บอต|bot)|(บอต|bot).*)$", re.IGNORECASE)

def isbot(data):
    if 'bot' in data['groups']: return True
    if data['name'] == u'New user message': return True
    return pbot.match(data['name']) is not None

def trimbot(data):
    appendlist = []
    
    for i in data:
        if not isbot(i):
            appendlist.append(i)
    
    return appendlist

def dowrite(path, data):
    puttext = u"ปรับปรุงล่าสุด %s\n\n{{/begin|500}}\n" % preload.getTime()
    cnt = 1
    
    for i in data:
        s = u"|-\n| %d || [[User:%s|%s]] %s %s || [[Special:Contributions/%s|%s]]\n" % (
            cnt, 
            i['name'], 
            i['name'], 
            '(Admin)' if ('sysop' in i['groups']) else '', 
            '(Bot)' if ('bot' in i['groups']) else '', 
            i['name'], 
            i['editcount'])

        puttext += s
        cnt += 1
    
    page = pywikibot.Page(site, path)
    gettext = page.get(get_redirect = True)
    
    pre, post = gettext.split(u"{{/end}}")
    
    page.put(puttext + u"{{/end}}\n" + post, u"ปรับปรุงรายการ")
    pywikibot.output(u"done!")
    
def main():
    includelist = libdata.LimitedSortedList(lambda a, b: b['editcount'] - a['editcount'])
    excludelist = libdata.LimitedSortedList(lambda a, b: b['editcount'] - a['editcount'])

    params = {
        'action'  : 'query',
        'list'    : 'allusers',
        'aulimit' : NUMQUERY,
        'auprop'  : 'editcount|groups',
    }
    
    while True:
        try: getdata = query.GetData(params, site)
        except: break
        pywikibot.output(getdata['query']['allusers'][0]['name'])
        
        includelist.concat(getdata['query']['allusers'])
        excludelist.concat(trimbot(getdata['query']['allusers']))
        
        try: params['aufrom'] = getdata['query-continue']['allusers']['aufrom']
        except: break
    
    dowrite(PATH + BOTSUFFIX, includelist.get()[:500])
    dowrite(PATH, excludelist.get()[:500])

if __name__ == "__main__":
    args, site, conf = preload.pre(u"update top user edits", lock = True)
    try: main()
    except: preload.posterror()
    preload.post()
